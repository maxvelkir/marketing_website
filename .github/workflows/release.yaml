name: Create and publish a Docker image

on:
  push:
    branches: ["release"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # docker-build-and-push-image:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Log in to the Container registry
  #       uses: docker/login-action@v2.1.0
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Extract metadata (tags, labels) for Docker
  #       uses: docker/metadata-action@v4.3.0
  #       id: meta
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v4.0.0
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}

  terraform-deploy:
    runs-on: ubuntu-latest
    outputs:
      terraform-output: ${{ steps.apply.outputs.terraform-output }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        run: terraform fmt -check

      - name: Initialise Terraform
        run: |
          cd terraform
          terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform apply
        run: |
          cd terraform
          terraform apply -auto-approve -input=false -var "do_token=${{ secrets.DO_PAT }}" -var "do_ssh_key=${{ secrets.DO_SSH_PUBLIC }}"

      - name: Pass down terraform output
        id: terraform-output
        run: echo TFO=$(terraform output) >> $GITHUB_OUTPUT

  ansible-configure:
    runs-on: ubuntu-latest
    needs: terraform-deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure inventory
        run: |
          cd ansible
          echo ${{ needs.terraform-deploy.outputs.terraform-output }} | grep -E -o "[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}" > ansible_hosts
          cat ansible_hosts
          ansible-playbook --private-key ${{ secrets.DO_SSH_PRIVATE }} playbook/configure-droplets.yaml
